version: 2.1

orbs:
    win: circleci/windows@2.2.0 # The Windows orb give you everything you need to start using the Windows executor.


executors:
    gcc_10:
        docker:
            - image: gcc:10
    gcc_9:
        docker:
            - image: gcc:9
    gcc_8:
        docker:
            - image: gcc:8
    gcc_7:
        docker:
            - image: gcc:7
    clang10:
        docker:
            - image: silkeh/clang:10
    clang9:
        docker:
            - image: silkeh/clang:9
    clang8:
        docker:
            - image: silkeh/clang:8
    clang7:
        docker:
            - image: silkeh/clang:7

jobs:
    compile_gcc10:
        executor: gcc_10
        steps:
            - checkout
            - run: apt-get update && apt-get install python3-pip -y
            - run: python3 -m pip install virtualenv
            - run: python3 -m virtualenv venv_test
            - run:
                  command: |
                      source venv_test/bin/activate
                      pip install -U grid2op
                      pip install -U pybind11
                      git submodule init
                      git submodule update
                      make
                      CC=gcc python setup.py build
                      python -m pip install -U .
    compile_gcc9:
        executor: gcc_9
        steps:
            - checkout
            - run: apt-get update && apt-get install python3-pip -y
            - run: python3 -m pip install virtualenv
            - run: python3 -m virtualenv venv_test
            - run:
                  command: |
                      source venv_test/bin/activate
                      pip install -U grid2op
                      pip install -U pybind11
                      git submodule init
                      git submodule update
                      make
                      CC=gcc python setup.py build
                      python -m pip install -U .
    compile_gcc8:
        executor: gcc_8
        steps:
            - checkout
            - run: apt-get update && apt-get install python3-pip -y
            - run: python3 -m pip install virtualenv
            - run: python3 -m virtualenv venv_test
            - run:
                command: |
                    source venv_test/bin/activate
                    pip install -U grid2op
                    pip install -U pybind11
                    git submodule init
                    git submodule update
                    make
                    CC=gcc python setup.py build
                    python -m pip install -U .
    compile_gcc7:
        executor: gcc_7
        steps:
            - checkout
            - run: apt-get update && apt-get install python3-pip -y
            - run: python3 -m pip install virtualenv
            - run: python3 -m virtualenv venv_test
            - run:
                command: |
                    source venv_test/bin/activate
                    pip install -U grid2op
                    pip install -U pybind11
                    git submodule init
                    git submodule update
                    make
                    CC=gcc python setup.py build
                    python -m pip install -U .
    compile_clang10:
        executor: clang10
        steps:
            - checkout
            - run: apt-get update && apt-get install python3-pip -y
            - run: python3 -m pip install virtualenv
            - run: python3 -m virtualenv venv_test
            - run:
                command: |
                    source venv_test/bin/activate
                    pip install -U grid2op
                    pip install -U pybind11
                    git submodule init
                    git submodule update
                    make
                    CC=clang python setup.py build
                    python -m pip install -U .
    compile_clang9:
        executor: clang9
        steps:
            - checkout
            - run: apt-get update && apt-get install python3-pip -y
            - run: python3 -m pip install virtualenv
            - run: python3 -m virtualenv venv_test
            - run:
                command: |
                    source venv_test/bin/activate
                    pip install -U grid2op
                    pip install -U pybind11
                    git submodule init
                    git submodule update
                    make
                    CC=clang python setup.py build
                    python -m pip install -U .
    compile_clang8:
        executor: clang8
        steps:
            - checkout
            - run: apt-get update && apt-get install python3-pip -y
            - run: python3 -m pip install virtualenv
            - run: python3 -m virtualenv venv_test
            - run:
                command: |
                    source venv_test/bin/activate
                    pip install -U grid2op
                    pip install -U pybind11
                    git submodule init
                    git submodule update
                    make
                    CC=clang python setup.py build
                    python -m pip install -U .
    compile_clang7:
        executor: clang7
        steps:
            - checkout
            - run: apt-get update && apt-get install python3-pip -y
            - run: python3 -m pip install virtualenv
            - run: python3 -m virtualenv venv_test
            - run:
                command: |
                    source venv_test/bin/activate
                    pip install -U grid2op
                    pip install -U pybind11
                    git submodule init
                    git submodule update
                    make
                    CC=clang python setup.py build
                    python -m pip install -U .
    compile_windows:
        executor: win/default  # executor type
        steps:
            - checkout
            - run: py -m pip install virtualenv
            - run: py -m virtualenv venv_test
            - run:
                command: |
                    .\venv_test\Scripts\activate
                    pip install -U grid2op
                    pip install -U pybind11
                    git submodule init
                    git submodule update
                    py setup.py build
                    py -m pip install -U .

workflows:
    version: 2.1
    compile:
        jobs:
          - compile_gcc10
          - compile_clang10
          - compile_gcc9
          - compile_clang9
          - compile_gcc8
          - compile_clang8
          - compile_gcc7
          - compile_clang7
          - compile_windows
