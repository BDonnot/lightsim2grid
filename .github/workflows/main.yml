name: CI

on:
  push:
    branches:
      - '*'
    tags:
      - 'v*.*.*'

jobs:
  manylinux_build:
    name: Build linux ${{ matrix.python.name }} wheel
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    strategy:
      matrix:
        python:
          - {
            name: cp37,
            abi: cp37m,
            version: '3.7',
          }
          - {
            name: cp38,
            abi: cp38,
            version: '3.8',
          }
          - {
            name: cp39,
            abi: cp39,
            version: '3.9',
          }
          - {
            name: cp310,
            abi: cp310,
            version: '3.10',
          }
          - {
            name: cp311,
            abi: cp311,
            version: '3.11',
          }

    steps:

      - name: Checkout sources
        uses: actions/checkout@v1
        with:
          submodules: true

      - name: Setup path
        run: echo "/opt/python/${{ matrix.python.name }}-${{ matrix.python.abi }}/bin/" >> $GITHUB_PATH

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Compile SuiteSparse
        run: make

      - name: Build wheel
        run: |
          # export __O3_OPTIM=1
          python3 setup.py bdist_wheel
          auditwheel repair dist/*.whl

      - name: Install wheel
        run: pip3 install wheelhouse/*.whl --user

      - name: Install GDB
        run: yum install -y gdb

      - name: Check package can be imported
        run: |
          # python3 -c "import lightsim2grid"
          # python3 -c "from lightsim2grid import *"
          # python3 -c "from lightsim2grid.newtonpf import newtonpf"
          gdb -batch -ex r --args python3 -c "from lightsim2grid import *" -ex backtrace

      - name: Check LightSimBackend can be imported
        run: |
          python3 -m pip install grid2op
          python3 -c "from lightsim2grid import LightSimBackend"
          python3 -c "from lightsim2grid import LightSimBackend; import grid2op; env = grid2op.make('l2rpn_case14_sandbox', test=True, backend=LightSimBackend())"

      - name: Upload wheel
        uses: actions/upload-artifact@v2
        with:
          name: lightsim2grid-wheel-linux-${{ matrix.python.name }}
          path: wheelhouse/*.whl

  macos_windows_build:
    name: Build ${{ matrix.config.name }} ${{ matrix.python.name }} wheel
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - {
            name: darwin,
            os: macos-latest,
          }
          - {
            name: windows,
            os: windows-2019,
          }
        python:
          - {
            name: cp37,
            version: '3.7',
          }
          - {
            name: cp38,
            version: '3.8',
          }
          - {
            name: cp39,
            version: '3.9',
          }
          - {
            name: cp310,
            version: '3.10',
          }
          - {
            name: cp311,
            version: '3.11',
          }

    steps:

      - name: Checkout sources
        uses: actions/checkout@v1
        with:
          submodules: true

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python.version }}

      - name: Get CIBUILDWHEEL for python 3.8, 3.9, 3.10
        if: (matrix.config.name == 'darwin') && ((matrix.python.version != 3.7) || (matrix.python.version < 3.11) )  
        uses: pypa/cibuildwheel@v2.15.0
        env:
          CIBW_ARCHS_LINUX: x86_64 arm64

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Compile SuiteSparse make (3.7 or 3.11+)
        if: (matrix.config.name == 'darwin') && ((matrix.python.version == 3.7) || (matrix.python.version >= 3.11) )
        run: |
          make
          export __O3_OPTIM=1
          python3 setup.py build

      - name: Compile SuiteSparse make for python 3.8, 3.9, 3.10
        if: (matrix.config.name == 'darwin') && ((matrix.python.version >= 3.8) || (matrix.python.version < 3.11) )          
        run: |
          make
          export __O3_OPTIM=1
          python3 -m cibuildwheel --output-dir wheelhouse

      - name: Compile SuiteSparse cmake
        if: matrix.config.name == 'windows'
        run: |
          cd build_cmake
          python generate_c_files.py
          mkdir build
          cd build
          cmake -DCMAKE_INSTALL_PREFIX=..\built -DCMAKE_BUILD_TYPE=Release ..
          cmake --build . --config Release
          cmake --install . --prefix ..\built
          cd ..
          cd ..
          set __O3_OPTIM=1
          python setup.py build

      - name: Build wheel
        if: ! ( (matrix.config.name == 'darwin') && ((matrix.python.version >= 3.8) || (matrix.python.version < 3.11) ) )     
        run: python setup.py bdist_wheel

      - name: Build source archive
        if: matrix.config.name == 'darwin' && matrix.python.name == 'cp39'
        run: python setup.py sdist

      - name: Install wheel
        shell: bash
        run: python -m pip install dist/*.whl --user

      - name: Check package can be imported
        run: |
          python -c "import lightsim2grid"
          python -c "from lightsim2grid import *"
          python -c "from lightsim2grid.newtonpf import newtonpf"
      
      - name: Check LightSimBackend can be imported
        run: |
          python -m pip install grid2op
          python -c "from lightsim2grid import LightSimBackend"
          python -c "from lightsim2grid import LightSimBackend; import grid2op; env = grid2op.make('l2rpn_case14_sandbox', test=True, backend=LightSimBackend())"

      - name: Upload wheel
        uses: actions/upload-artifact@v2
        with:
          name: lightsim2grid-wheel-${{ matrix.config.name }}-${{ matrix.python.name }}
          path: dist/*.whl

      - name: Upload source archive
        uses: actions/upload-artifact@v2
        if: matrix.config.name == 'darwin' && matrix.python.name == 'cp39'
        with:
          name: lightsim2grid-sources
          path: dist/*.tar.gz

  package:
    name: Package wheels
    runs-on: ubuntu-latest
    needs: [manylinux_build, macos_windows_build]

    steps:
      - name: Download wheels
        uses: actions/download-artifact@v2
        with:
          path: download

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: lightsim2grid-wheels
          path: |
            download/**/*.whl
            download/**/*.tar.gz
